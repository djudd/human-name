name: Rust

on: [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  stable:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install minimal stable with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Run clippy
        run: cargo clippy --verbose
        if: matrix.os == ubuntu-latest
      - name: Run rustfmt
        run: cargo fmt --check --verbose
        if: matrix.os == ubuntu-latest
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: libhuman_name-${{ matrix.os }}-amd64
          path: target/release/libhuman_name.dylib
          if-no-files-found: error

  msrv:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install minimum supported Rust version
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.52.1
      - name: Typecheck
        run: cargo check --verbose

